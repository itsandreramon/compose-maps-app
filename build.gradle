buildscript {
    ext {
        buildConfig = [
                'compileSdk': 30,
                'minSdk'    : 23,
                'targetSdk' : 30,
        ]
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath libs.android.gradlePlugin
        classpath libs.kotlin.gradlePlugin
        classpath libs.google.gms.gradlePlugin
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()

        // Room Snapshots
        def roomSnapshot = libs.versions.androidx.roomsnapshot.get()
        if (roomSnapshot.length() > 1) {
            maven { url "https://androidx.dev/snapshots/builds/$roomSnapshot/artifacts/repository/" }
        }
    }
}

subprojects {
    apply from: rootProject.file('ktlint.gradle')

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xopt-in=androidx.compose.animation.ExperimentalAnimationApi"
            jvmTarget = "1.8"
        }
    }

    configurations.configureEach {
        exclude group: 'androidx.appcompat'
        exclude group: 'com.google.android.material', module: 'material'

        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def group = details.requested.group
            def module = details.requested.module.name

            if (group == 'org.jetbrains.kotlin' && module.startsWith('kotlin-stdlib')) {
                details.useVersion libs.versions.kotlin.get()
            }

            if (group == 'org.xerial' && module.startsWith('sqlite-jdbc')) {
                // workaround for Apple Silicon
                // see: https://issuetracker.google.com/issues/174695268
                details.useTarget "org.xerial:sqlite-jdbc:3.34.0"
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}